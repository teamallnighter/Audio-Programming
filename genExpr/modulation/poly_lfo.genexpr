Param multiplier(1);
Param r_hi(1);
Param r_lo(-1);
Param waveform(0);
Param phase(0);
Param inv(0);
Param on(1);
neq_1 = on != 0;
rsub_2 = r_hi - r_lo;
mul_3 = rsub_2 * 0.5;
add_4 = r_lo + mul_3;
eq_5 = waveform == 4;
eq_6 = waveform == 3;
eq_7 = waveform == 1;
eq_8 = waveform == 0;
eq_9 = waveform == 2;
eq_10 = waveform == 5;
noise_11 = noise();
add_12 = in1 + phase;
rate_13 = rate(add_12, multiplier);
cycle_14, cycleindex_15 = cycle(rate_13, index="phase");
mul_16 = cycle_14 * eq_8;
cycle_17, cycleindex_18 = cycle(rate_13);
mul_19 = cycle_17 * 1000;
clamp_20 = clamp(mul_19, -1, 1);
mul_21 = clamp_20 * eq_5;
triangle_22 = triangle(rate_13, 0.5);
mul_23 = triangle_22 * 2;
sub_24 = mul_23 - 1;
mul_25 = sub_24 * eq_6;
triangle_26 = triangle(rate_13, 1.);
mul_27 = triangle_26 * 2;
sub_28 = mul_27 - 1;
mul_29 = sub_28 * eq_7;
triangle_30 = triangle(rate_13, 0.);
mul_31 = triangle_30 * 2;
sub_32 = mul_31 - 1;
mul_33 = sub_32 * eq_9;
triangle_34 = triangle(rate_13, 0.);
delta_35 = delta(triangle_34);
gt_36 = delta_35 > 0.5;
latch_37 = latch(noise_11, gt_36);
mul_38 = latch_37 * eq_10;
add_39 = ((((((((((mul_38 + mul_33)) + mul_16)) + mul_29)) + mul_25)) + mul_21)) + 0;
mul_40 = add_39 * -1;
switch_41 = inv ? mul_40 : add_39;
mul_42 = switch_41 * mul_3;
add_43 = mul_42 + add_4;
mul_44 = add_43 * neq_1;
scale_45 = scale(mul_44, -1, 1, 0, 1, 1);
out1 = scale_45;